@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

@using Blazored.LocalStorage

<h3 class="text-center mb-4">Iniciar Sesión</h3>

<div class="d-flex justify-content-center">
    <div class="card shadow p-4" style="width: 350px;">
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <div class="mb-3">
                <label class="form-label">Correo electrónico</label>
                <InputText class="form-control" @bind-Value="loginModel.Email" />
            </div>

            <div class="mb-3">
                <label class="form-label">Contraseña</label>
                <InputText type="password" class="form-control" @bind-Value="loginModel.Password" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Ingresar</button>
        </EditForm>
    </div>
</div>

@code {
    LoginModel loginModel = new();

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("https://localhost:7017/api/Persona_/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var persona = await response.Content.ReadFromJsonAsync<Persona>();
            Console.WriteLine($"Bienvenido {persona.FirstName}");
            await LocalStorage.SetItemAsync("usuario", persona);
            Navigation.NavigateTo("/Home");
            
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error: {error}");
        }
    }


    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }

    public class Persona
    {
        public int PersonId { get; set; }

        public string FirstName { get; set; }

        public string LastName { get; set; }

        public string Email { get; set; }

        public string PasswordEmail { get; set; }

        public string Employee { get; set; }

        public string StatePerson { get; set; }
    }
}
