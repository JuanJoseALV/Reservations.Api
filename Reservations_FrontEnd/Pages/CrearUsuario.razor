@page "/crear-usuario"
@inject HttpClient Http
@inject NavigationManager Navigation
@using System.ComponentModel.DataAnnotations
@using Reservations_FrontEnd.Layout
<EditForm Model="@persona" OnValidSubmit="@CreateUsuario">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <Reutilizables label ="Nombre" Placeholder="Escriba su nombre" @bind-Value="persona.FirstName" />
    <Reutilizables Label="Apellido" Placeholder="Escriba su apellido" @bind-Value="persona.LastName" />
    <Reutilizables Label="Email" Placeholder="ejemplo@email.com"  @bind-Value="persona.Email"/>
    <Reutilizables Label="Contraseña" Placeholder="********" @bind-Value="persona.PasswordEmail" Type="password"/>

    <button type="submit" class="btn btn-primary">Crear Usuario</button>
</EditForm>

@code {
    private Persona persona = new();

    private async Task CreateUsuario ()
    {
        var response = await Http.PostAsJsonAsync("https://localhost:7017/api/Persona_/login", persona);

        if (response.IsSuccessStatusCode)
        {
            var persona = await response.Content.ReadFromJsonAsync<Persona>();
            Navigation.NavigateTo("/Home");

        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error: {error}");
        }
    }


    public class Persona
    {
        [Required(ErrorMessage = "El nombre es obligatorio")]
        public string FirstName { get; set; }

        [Required(ErrorMessage = "El apellido es obligatorio")]
        public string LastName { get; set; }

        [Required(ErrorMessage = "El email es obligatorio")]
        public string Email { get; set; }

        [Required(ErrorMessage ="La contraseña es requerida")]
        public string PasswordEmail { get; set; }

        [Required(ErrorMessage ="Debe de elegir un tipo de usuario")]
        public string Employee { get; set; }
    }
}
